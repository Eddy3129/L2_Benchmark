// import { cookieStorage, createStorage } from 'wagmi'
// import { WagmiAdapter } from '@reown/appkit-adapter-wagmi'
// import { polygonAmoy, polygonZkEvmCardona, optimismSepolia, arbitrumSepolia, baseSepolia, zksyncSepoliaTestnet, sepolia } from '@reown/appkit/networks'
// import type { Chain } from 'viem'

// // Read Project ID from environment variables
// export const projectId = process.env.NEXT_PUBLIC_PROJECT_ID

// // Ensure Project ID is defined at build time
// if (!projectId) {
//   throw new Error('NEXT_PUBLIC_PROJECT_ID is not defined. Please set it in .env.local')
// }

// // Define supported networks, explicitly typed as a non-empty array of Chains
// export const networks: [Chain, ...Chain[]] = [polygonAmoy, polygonZkEvmCardona, optimismSepolia, arbitrumSepolia, baseSepolia, zksyncSepoliaTestnet, sepolia]

// // Create a networks mapping for easy lookup by chain ID
// export const networksMap: Record<string, Chain> = {
//   [polygonAmoy.id.toString()]: polygonAmoy,
//   [polygonZkEvmCardona.id.toString()]: polygonZkEvmCardona,
//   [optimismSepolia.id.toString()]: optimismSepolia,
//   [arbitrumSepolia.id.toString()]: arbitrumSepolia,
//   [baseSepolia.id.toString()]: baseSepolia,
//   [zksyncSepoliaTestnet.id.toString()]: zksyncSepoliaTestnet,
//   [sepolia.id.toString()]: sepolia,
// }

// // Create the Wagmi adapter instance
// export const wagmiAdapter = new WagmiAdapter({
//   storage: createStorage({ storage: cookieStorage }), // Use cookieStorage for SSR
//   ssr: true, // Enable SSR support
//   projectId,
//   networks, // Pass the explicitly typed networks array
// })

// // Export the Wagmi config generated by the adapter
// export const config = wagmiAdapter.wagmiConfig